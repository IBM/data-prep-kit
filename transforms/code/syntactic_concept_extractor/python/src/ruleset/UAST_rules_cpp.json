{
    "preproc_include": {
        "uast_node_type": "uast_package",
        "extractor": "test = code_snippet.split('#include', 1)[1].strip()\ntest = test.split('//')[0].strip()\nself.extracted = test.split('/*')[0].strip()\nself.extracted = self.extracted.replace('<', '').replace('>', '').replace('\"', '').replace(\"'\", '')\nself.extracted = self.extracted.replace(';', '').replace('*', '')\nprint(self.extracted)"
    },
    "comment": {
        "uast_node_type": "uast_comment",
        "extractor": "if (code_snippet[0:2] == '//'):\n\tself.extracted = code_snippet[2:].strip()\nelse:\n\tself.extracted = code_snippet[2:-2].strip()\n"
    },
    "function_definition": {
        "uast_node_type": "uast_function",
        "extractor": "temp_0 = code_snippet.split('(')[0].strip() \nself.extracted = temp_0.split(' ')[-1].strip()"
    },
    "class_specifier": {
        "uast_node_type": "uast_class",
        "extractor": "self.extracted = code_snippet.split('class ', 1)[1].split('{', 1)[0].strip()\nif (':' in self.extracted):\n    self.extracted = self.extracted.split(':', 1)[0].strip()"
    },
    "call_expression": {
        "uast_node_type": "uast_call",
        "extractor": "self.extracted = code_snippet.split('(', 1)[0].strip()"
    }
}