apiVersion: v1
data:
    allow-snippet-annotations: "false"
    worker-processes: "4"
kind: ConfigMap
metadata:
    labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: ingress-nginx-minio
        app.kubernetes.io/name: ingress-nginx-minio
        app.kubernetes.io/part-of: ingress-nginx-minio
        app.kubernetes.io/version: 1.10.1
    name: ingress-nginx-minio-controller
    namespace: ingress-nginx
---
apiVersion: v1
kind: Service
metadata:
    labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: ingress-nginx-minio
        app.kubernetes.io/name: ingress-nginx-minio
        app.kubernetes.io/part-of: ingress-nginx-minio
        app.kubernetes.io/version: 1.10.1
    name: ingress-nginx-minio-controller
    namespace: ingress-nginx
spec:
    ipFamilies:
        - IPv4
    ipFamilyPolicy: SingleStack
    ports:
        - appProtocol: http
          name: http
          port: 90
          protocol: TCP
          targetPort: http
        - appProtocol: https
          name: https
          port: 453
          protocol: TCP
          targetPort: https
    selector:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: ingress-nginx-minio
        app.kubernetes.io/name: ingress-nginx-minio
    type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
    labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: ingress-nginx-minio
        app.kubernetes.io/name: ingress-nginx-minio
        app.kubernetes.io/part-of: ingress-nginx-minio
        app.kubernetes.io/version: 1.10.1
    name: ingress-nginx-minio-controller
    namespace: ingress-nginx
spec:
    minReadySeconds: 0
    revisionHistoryLimit: 10
    selector:
        matchLabels:
            app.kubernetes.io/component: controller
            app.kubernetes.io/instance: ingress-nginx-minio
            app.kubernetes.io/name: ingress-nginx-minio
    strategy:
        rollingUpdate:
            maxUnavailable: 1
        type: RollingUpdate
    template:
        metadata:
            labels:
                app.kubernetes.io/component: controller
                app.kubernetes.io/instance: ingress-nginx-minio
                app.kubernetes.io/name: ingress-nginx-minio
                app.kubernetes.io/part-of: ingress-nginx-minio
                app.kubernetes.io/version: 1.10.1
        spec:
            containers:
                - args:
                      - /nginx-ingress-controller
                      - --election-id=ingress-nginx-minio-leader
                      - --controller-class=k8s.io/ingress-nginx-minio
                      - --ingress-class=nginx-minio
                      - --configmap=$(POD_NAMESPACE)/ingress-nginx-minio-controller
                      - --watch-ingress-without-class=true
                      - --enable-metrics=false
                      - --publish-status-address=localhost
                  env:
                      - name: POD_NAME
                        valueFrom:
                            fieldRef:
                                fieldPath: metadata.name
                      - name: POD_NAMESPACE
                        valueFrom:
                            fieldRef:
                                fieldPath: metadata.namespace
                      - name: LD_PRELOAD
                        value: /usr/local/lib/libmimalloc.so
                  image: registry.k8s.io/ingress-nginx/controller:v1.10.1@sha256:e24f39d3eed6bcc239a56f20098878845f62baa34b9f2be2fd2c38ce9fb0f29e
                  imagePullPolicy: IfNotPresent
                  lifecycle:
                      preStop:
                          exec:
                              command:
                                  - /wait-shutdown
                  livenessProbe:
                      failureThreshold: 5
                      httpGet:
                          path: /healthz
                          port: 10254
                          scheme: HTTP
                      initialDelaySeconds: 10
                      periodSeconds: 10
                      successThreshold: 1
                      timeoutSeconds: 1
                  name: controller
                  ports:
                      - containerPort: 80
                        hostPort: 90
                        name: http
                        protocol: TCP
                      - containerPort: 443
                        hostPort: 453
                        name: https
                        protocol: TCP
                      - containerPort: 8443
                        name: webhook
                        protocol: TCP
                  readinessProbe:
                      failureThreshold: 3
                      httpGet:
                          path: /healthz
                          port: 10254
                          scheme: HTTP
                      initialDelaySeconds: 10
                      periodSeconds: 10
                      successThreshold: 1
                      timeoutSeconds: 1
                  resources:
                      requests:
                          cpu: 100m
                          memory: 90Mi
                  securityContext:
                      allowPrivilegeEscalation: false
                      capabilities:
                          add:
                              - NET_BIND_SERVICE
                          drop:
                              - ALL
                      readOnlyRootFilesystem: false
                      runAsNonRoot: true
                      runAsUser: 101
                      seccompProfile:
                          type: RuntimeDefault
                  volumeMounts:
                      - mountPath: /usr/local/certificates/
                        name: webhook-cert
                        readOnly: true
            dnsPolicy: ClusterFirst
            nodeSelector:
                ingress-ready: "true"
                kubernetes.io/os: linux
            serviceAccountName: ingress-nginx
            terminationGracePeriodSeconds: 0
            tolerations:
                - effect: NoSchedule
                  key: node-role.kubernetes.io/master
                  operator: Equal
                - effect: NoSchedule
                  key: node-role.kubernetes.io/control-plane
                  operator: Equal
            volumes:
                - name: webhook-cert
                  secret:
                      secretName: ingress-nginx-admission
---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
    labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: ingress-nginx-minio
        app.kubernetes.io/name: ingress-nginx-minio
        app.kubernetes.io/part-of: ingress-nginx-minio
        app.kubernetes.io/version: 1.10.1
    name: nginx-minio
spec:
    controller: k8s.io/ingress-nginx-minio
