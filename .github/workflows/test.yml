name: Build, Test and (Optionally) Push images

on:
    workflow_dispatch:
    push:
        branches:
            - "dev"
            - "releases/**"
    pull_request:
        branches:
            - "dev"
            - "releases/**"
jobs:
    infer_version:
        runs-on: ubuntu-22.04
        outputs:
            publish_images: ${{ steps.version.outputs.publish_images }}
        steps:
            - id: version
              run: |
                 publish_images='false'
                 if  [[ ${GITHUB_REF} != refs/heads/dev && ${GITHUB_REPOSITORY} == IBM/data-prep-kit ]] ;
                 then
                   publish_images='true'
                 fi
                 echo "publish_images=$publish_images" >> "$GITHUB_OUTPUT"
    test-make:
        runs-on: ubuntu-22.04
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Test top-level recursive make targets.
              run: |
                  make -n clean test build publish set-versions
    test-python-lib:
        runs-on: ubuntu-22.04
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Test data-processing-lib/python
              run: |
                  make -C data-processing-lib/python DOCKER=docker venv test
    test-ray-lib:
        runs-on: ubuntu-22.04
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Test data-processing-lib/ray
              run: |
                  make -C data-processing-lib/ray DOCKER=docker venv test
    test-spark-lib:
        runs-on: ubuntu-22.04
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Test data-processing-lib/spark
              run: |
                  make -C data-processing-lib/spark DOCKER=docker venv test
    test-code:
        runs-on: ubuntu-22.04
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Test Code Transforms
              run: |
                  make -C transforms/code DOCKER=docker venv test-src
    test-language:
        runs-on: ubuntu-22.04
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Test Language Transforms
              run: |
                  make -C transforms/language DOCKER=docker venv test-src
    test-universal:
        runs-on: ubuntu-22.04
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Test Universal Transforms
              run: |
                  make -C transforms/universal DOCKER=docker venv test-src
    test-tools:
        runs-on: ubuntu-22.04
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Test tools
              run: |
                  make -C tools DOCKER=docker venv test
    test-kfp-v1:
        runs-on: ubuntu-22.04
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Free up space in github runner
              # Free space as indicated here : https://github.com/actions/runner-images/issues/2840#issuecomment-790492173
              run: |
                  df -h
                  sudo rm -rf "/usr/local/share/boost"
                  sudo rm -rf "$AGENT_TOOLSDIRECTORY"
                  sudo rm -rf /usr/share/dotnet /opt/ghc /usr/local/lib/android /usr/local/share/powershell /usr/share/swift /usr/lib/jvm /usr/local/.ghcup
                  sudo docker rmi $(docker image ls -aq) >/dev/null 2>&1 || true
                  df -h
            - name: Test KFP libs (shared and v1) and run a workflow
              timeout-minutes: 120
              run: |
                  export REPOROOT=$PWD
                  export K8S_SETUP_SCRIPTS=$PWD/scripts/k8s-setup
                  source $K8S_SETUP_SCRIPTS/requirements.env
                  export PATH=$PATH:/tmp/
                  curl -Lo /tmp/kind https://kind.sigs.k8s.io/dl/v${KIND_VERSION}/kind-linux-amd64
                  chmod 777 /tmp/kind
                  curl -fsSL -o /tmp/get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
                  chmod 700 /tmp/get_helm.sh
                  HELM_INSTALL_DIR=/tmp/ /tmp/get_helm.sh -v v${HELM_VERSION} --no-sudo
                  chmod 777 /tmp/helm
                  curl -L https://dl.k8s.io/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl
                  chmod 777 /tmp/kubectl
                  curl https://dl.min.io/client/mc/release/linux-amd64/mc --create-dirs -o /tmp/mc
                  chmod +x /tmp/mc
                  export DEPLOY_KUBEFLOW=1
                  make -C $K8S_SETUP_SCRIPTS setup
                  make -C kfp/kfp_support_lib test
                  make -C transforms workflow-build
                  dir=("code"  "universal") && index=$(($RANDOM % 2)) && subdirs=${dir[$index]} && transforms=($(find transforms/$subdirs/ -type d  -maxdepth 1 ))
                  # First element is not really a subdir but rather the current dir so remove it and randomly choose a transform to run
                  set -- "${transforms[@]}" && shift && transforms=("$@") && size=${#transforms[@]} && index=$(($RANDOM % $size))
                  source $K8S_SETUP_SCRIPTS/common.sh
                  header_text "Running ${transforms[$index]} workflow test"
                  make -C ${transforms[$index]} workflow-test
                  header_text "Run ${transforms[$index]} completed"

    test-kfp-v2:
        runs-on: ubuntu-22.04
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Free up space in github runner
              # Free space as indicated here : https://github.com/actions/runner-images/issues/2840#issuecomment-790492173
              run: |
                  df -h
                  sudo rm -rf "/usr/local/share/boost"
                  sudo rm -rf "$AGENT_TOOLSDIRECTORY"
                  sudo rm -rf /usr/share/dotnet /opt/ghc /usr/local/lib/android /usr/local/share/powershell /usr/share/swift /usr/lib/jvm /usr/local/.ghcup
                  sudo docker rmi $(docker image ls -aq) >/dev/null 2>&1 || true
                  df -h
            - name: Test KFP libs (shared and v2) and run a workflow
              timeout-minutes: 120
              run: |
                  export REPOROOT=$PWD
                  export K8S_SETUP_SCRIPTS=$PWD/scripts/k8s-setup
                  source $K8S_SETUP_SCRIPTS/requirements.env
                  export PATH=$PATH:/tmp/
                  curl -Lo /tmp/kind https://kind.sigs.k8s.io/dl/v${KIND_VERSION}/kind-linux-amd64
                  chmod 777 /tmp/kind
                  curl -fsSL -o /tmp/get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
                  chmod 700 /tmp/get_helm.sh
                  HELM_INSTALL_DIR=/tmp/ /tmp/get_helm.sh -v v${HELM_VERSION} --no-sudo
                  chmod 777 /tmp/helm
                  curl -L https://dl.k8s.io/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl
                  chmod 777 /tmp/kubectl
                  curl https://dl.min.io/client/mc/release/linux-amd64/mc --create-dirs -o /tmp/mc
                  chmod +x /tmp/mc
                  export DEPLOY_KUBEFLOW=1
                  export KFPv2=1
                  make -C $K8S_SETUP_SCRIPTS setup
                  make -C kfp/kfp_support_lib test
                  make -C transforms workflow-build
                  dir=("code"  "universal") && index=$(($RANDOM % 2)) && subdirs=${dir[$index]} && transforms=($(find transforms/$subdirs/ -type d  -maxdepth 1 ))
                  # First element is not really a subdir but rather the current dir so remove it and randomly choose a transform to run
                  set -- "${transforms[@]}" && shift && transforms=("$@") && size=${#transforms[@]} && index=$(($RANDOM % $size))
                  source $K8S_SETUP_SCRIPTS/common.sh
                  header_text "Running ${transforms[$index]} workflow test"
                  make -C ${transforms[$index]} workflow-test
                  header_text "Run ${transforms[$index]} completed"
    test-code-images:
        needs: [infer_version]
        runs-on: ubuntu-22.04
        timeout-minutes: 30
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Free up space in github runner
              # Free space as indicated here : https://github.com/actions/runner-images/issues/2840#issuecomment-790492173
              run: |
                  df -h
                  sudo rm -rf "/usr/local/share/boost"
                  sudo rm -rf "$AGENT_TOOLSDIRECTORY"
                  sudo rm -rf /usr/share/dotnet /opt/ghc /usr/local/lib/android /usr/local/share/powershell /usr/share/swift /usr/lib/jvm /usr/local/.ghcup
                  sudo docker rmi $(docker image ls -aq) >/dev/null 2>&1 || true
                  df -h
            - name: Test Code Transform Images
              run: |
                  make -C data-processing-lib DOCKER=docker image 
                  make -C transforms/code DOCKER=docker test-image
            - name: Print space
               # Free space as indicated here : https://github.com/actions/runner-images/issues/2840#issuecomment-790492173
              run: |
                   df -h
                   docker images
            - name: Save images
              if: needs.infer_version.outputs.publish_images == 'true'
              run: make -C transforms/code docker-save-image
            - name: Upload images
              if: needs.infer_version.outputs.publish_images == 'true'
              uses: actions/upload-artifact@v3
              with:
                name: images-code
                path: artifacts/*
                retention-days: 1
                compression-level: 0
    test-language-images:
        needs: [infer_version]
        runs-on: ubuntu-22.04
        timeout-minutes: 30
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Free up space in github runner
              # Free space as indicated here : https://github.com/actions/runner-images/issues/2840#issuecomment-790492173
              run: |
                  df -h
                  sudo rm -rf "/usr/local/share/boost"
                  sudo rm -rf "$AGENT_TOOLSDIRECTORY"
                  sudo rm -rf /usr/share/dotnet /opt/ghc /usr/local/lib/android /usr/local/share/powershell /usr/share/swift /usr/lib/jvm /usr/local/.ghcup
                  sudo docker rmi $(docker image ls -aq) >/dev/null 2>&1 || true
                  df -h
            - name: Test language Transform Images
              run: |
                  make -C data-processing-lib DOCKER=docker image
                  make -C transforms/language DOCKER=docker test-image
            - name: Print space
              # Free space as indicated here : https://github.com/actions/runner-images/issues/2840#issuecomment-790492173
              run: df -h
            - name: Save images
              if: needs.infer_version.outputs.publish_images == 'true'
              run: make -C transforms/language docker-save-image
            - name: Upload images
              if: needs.infer_version.outputs.publish_images == 'true'
              uses: actions/upload-artifact@v3
              with:
                  name: images-language
                  path: artifacts/*
                  compression-level: 0
    test-universal-images:
        needs: [infer_version]
        runs-on: ubuntu-22.04
        timeout-minutes: 120
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Free up space in github runner
              # Free space as indicated here : https://github.com/actions/runner-images/issues/2840#issuecomment-790492173
              run: |
                  df -h
                  sudo rm -rf /opt/ghc
                  sudo rm -rf "/usr/local/share/boost"
                  sudo rm -rf "$AGENT_TOOLSDIRECTORY"
                  sudo rm -rf /usr/share/dotnet /opt/ghc /usr/local/lib/android /usr/local/share/powershell /usr/share/swift /usr/lib/jvm /usr/local/.ghcup
                  sudo docker rmi $(docker image ls -aq) >/dev/null 2>&1 || true
                  df -h
            - name: Test Universal Transform Images
              run: |
                  make -C data-processing-lib DOCKER=docker image 
                  make -C transforms/universal DOCKER=docker test-image
            - name: Print space
               # Free space as indicated here : https://github.com/actions/runner-images/issues/2840#issuecomment-790492173
              run: |
                   df -h
                   docker images
            - name: Save images
              if: ${{ needs.infer_version.outputs.publish_images == 'true' }}
              run: make -C transforms/universal docker-save-image
            - name: Upload images
              if: ${{ needs.infer_version.outputs.publish_images == 'true' }}
              uses: actions/upload-artifact@v3
              with:
                  name: images-universal
                  path: artifacts/*
                  compression-level: 0
    build-kfp-components:
      needs: [infer_version]
      runs-on: ubuntu-22.04
      timeout-minutes: 30
      steps:
          - name: Checkout
            uses: actions/checkout@v4
          - name: Free up space in github runner
            # Free space as indicated here : https://github.com/actions/runner-images/issues/2840#issuecomment-790492173
            run: |
                df -h
                sudo rm -rf "/usr/local/share/boost"
                sudo rm -rf "$AGENT_TOOLSDIRECTORY"
                sudo rm -rf /usr/share/dotnet /opt/ghc /usr/local/lib/android /usr/local/share/powershell /usr/share/swift /usr/lib/jvm /usr/local/.ghcup
                sudo docker rmi $(docker image ls -aq) >/dev/null 2>&1 || true
                df -h
          - name: Build 
            run: |
               make -C kfp/kfp_ray_components DOCKER=docker image
          - name: Print space
            # Free space as indicated here : https://github.com/actions/runner-images/issues/2840#issuecomment-790492173
            run: df -h
          - name: Save images
            if: ${{ needs.infer_version.outputs.publish_images == 'true' }}
            run: make -C kfp/kfp_ray_components docker-save-image
          - name: Upload images
            if: ${{ needs.infer_version.outputs.publish_images == 'true' }}
            uses: actions/upload-artifact@v3
            with:
                name: images-kfp
                path: artifacts/*
                compression-level: 0
    test-tool-images:
        runs-on: ubuntu-22.04
        timeout-minutes: 30
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Build and Test Tool images
              run: |
                  make -C tools/ingest2parquet DOCKER=docker test-image
    push-images:
        name: Push images with latest tag
        runs-on: ubuntu-22.04
        if: needs.infer_version.outputs.publish_images == 'true'
        env:
           DOCKER_REGISTRY_USER: ${{ secrets.DOCKER_REGISTRY_USER }}
           DOCKER_REGISTRY_KEY: ${{ secrets.DOCKER_REGISTRY_KEY }}
        needs: [infer_version, test-ray-lib, test-spark-lib, test-code, test-language, test-universal, test-tools, test-kfp-v1, test-kfp-v2, test-code-images, test-language-images, test-universal-images, build-kfp-components]
        steps:
        - uses: actions/checkout@v3
        - name: Free up space in github runner
            # Free space as indicated here : https://github.com/actions/runner-images/issues/2840#issuecomment-790492173
          run: |
                df -h
                sudo rm -rf "/usr/local/share/boost"
                sudo rm -rf "$AGENT_TOOLSDIRECTORY"
                sudo rm -rf /usr/share/dotnet /opt/ghc /usr/local/lib/android /usr/local/share/powershell /usr/share/swift /usr/lib/jvm /usr/local/.ghcup
                sudo docker rmi $(docker image ls -aq) >/dev/null 2>&1 || true
                df -h
        - name: Download artifact
          uses: actions/download-artifact@v3
          with:
            path: artifacts/
            pattern: images-*
            merge-multiple: true
        - name: Print artifacts dir
          run: ls -R artifacts/
        - name: Load code images
          run: |
               make -C transforms docker-load-image
               make -C kfp-kfp_ray_componenets docker-load-image
        - name: Publish images
          if: needs.infer_version.outputs.publish_images == 'true'
#           run: make -C transforms -C kfp-kfp_ray_componenets publish
          run: echo "make -C transforms -C kfp-kfp_ray_componenets publish"


